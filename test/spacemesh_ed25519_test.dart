import 'dart:convert';
import 'dart:typed_data';

import 'package:flutter_test/flutter_test.dart';

import 'package:spacemesh_ed25519/spacemesh_ed25519.dart';
import 'package:bip39/bip39.dart' as bip39;

void main() {
  test('newDerivedKeyFromSeed', () async {
    final ed = ED25519();
    var seed = bip39
        .mnemonicToSeed(
            "bus object report ask kind torch rule swamp observe crowd worry say")
        .sublist(32);

    Uint8List pkresult = Uint8List.fromList([
      46,
      69,
      243,
      191,
      21,
      23,
      116,
      118,
      45,
      1,
      148,
      122,
      181,
      80,
      190,
      195,
      26,
      201,
      248,
      82,
      183,
      231,
      14,
      235,
      201,
      174,
      233,
      78,
      243,
      206,
      159,
      205,
      190,
      221,
      96,
      102,
      181,
      250,
      151,
      37,
      245,
      62,
      39,
      56,
      31,
      198,
      17,
      149,
      49,
      142,
      146,
      210,
      35,
      82,
      22,
      7,
      179,
      233,
      63,
      75,
      168,
      88,
      140,
      16
    ]);
    expect(
        await ed.newDerivedKeyFromSeed(
            Uint8List.fromList(seed),
            Uint8List.fromList(
                [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]),
            Uint8List.fromList(utf8.encode("Spacemesh blockmesh"))),
        pkresult);
  });

  test('sign', () async {
    final ed = ED25519();

    Uint8List dummyMessage = Uint8List.fromList([255, 0, 255, 0]);
    Uint8List sigResult = Uint8List.fromList([
      200,
      242,
      219,
      170,
      34,
      249,
      111,
      156,
      243,
      22,
      106,
      225,
      76,
      144,
      179,
      113,
      247,
      58,
      114,
      37,
      173,
      226,
      115,
      145,
      84,
      154,
      159,
      33,
      209,
      5,
      91,
      118,
      141,
      97,
      15,
      210,
      69,
      125,
      103,
      23,
      143,
      60,
      232,
      111,
      186,
      173,
      127,
      166,
      134,
      161,
      192,
      80,
      248,
      133,
      169,
      195,
      129,
      1,
      36,
      206,
      252,
      93,
      110,
      12
    ]);
    expect(
        await ed.sign(
            dummyMessage,
            Uint8List.fromList([
              46,
              69,
              243,
              191,
              21,
              23,
              116,
              118,
              45,
              1,
              148,
              122,
              181,
              80,
              190,
              195,
              26,
              201,
              248,
              82,
              183,
              231,
              14,
              235,
              201,
              174,
              233,
              78,
              243,
              206,
              159,
              205,
              190,
              221,
              96,
              102,
              181,
              250,
              151,
              37,
              245,
              62,
              39,
              56,
              31,
              198,
              17,
              149,
              49,
              142,
              146,
              210,
              35,
              82,
              22,
              7,
              179,
              233,
              63,
              75,
              168,
              88,
              140,
              16
            ])),
        sigResult);
  });

  test('extractPublicKey', () async {
    final ed = ED25519();

    Uint8List dummyMessage = Uint8List.fromList([255, 0, 255, 0]);
    Uint8List pkresult = Uint8List.fromList([
      190,
      221,
      96,
      102,
      181,
      250,
      151,
      37,
      245,
      62,
      39,
      56,
      31,
      198,
      17,
      149,
      49,
      142,
      146,
      210,
      35,
      82,
      22,
      7,
      179,
      233,
      63,
      75,
      168,
      88,
      140,
      16
    ]);

    expect(
        await ed.extractPublicKey(
            dummyMessage,
            Uint8List.fromList([
              200,
              242,
              219,
              170,
              34,
              249,
              111,
              156,
              243,
              22,
              106,
              225,
              76,
              144,
              179,
              113,
              247,
              58,
              114,
              37,
              173,
              226,
              115,
              145,
              84,
              154,
              159,
              33,
              209,
              5,
              91,
              118,
              141,
              97,
              15,
              210,
              69,
              125,
              103,
              23,
              143,
              60,
              232,
              111,
              186,
              173,
              127,
              166,
              134,
              161,
              192,
              80,
              248,
              133,
              169,
              195,
              129,
              1,
              36,
              206,
              252,
              93,
              110,
              12
            ])),
        pkresult);
  });

  test('verify', () async {
    final ed = ED25519();

    Uint8List pk = Uint8List.fromList([
      190,
      221,
      96,
      102,
      181,
      250,
      151,
      37,
      245,
      62,
      39,
      56,
      31,
      198,
      17,
      149,
      49,
      142,
      146,
      210,
      35,
      82,
      22,
      7,
      179,
      233,
      63,
      75,
      168,
      88,
      140,
      16
    ]);
    Uint8List msg = Uint8List.fromList([255, 0, 255, 0]);
    Uint8List sig = Uint8List.fromList([
      200,
      242,
      219,
      170,
      34,
      249,
      111,
      156,
      243,
      22,
      106,
      225,
      76,
      144,
      179,
      113,
      247,
      58,
      114,
      37,
      173,
      226,
      115,
      145,
      84,
      154,
      159,
      33,
      209,
      5,
      91,
      118,
      141,
      97,
      15,
      210,
      69,
      125,
      103,
      23,
      143,
      60,
      232,
      111,
      186,
      173,
      127,
      166,
      134,
      161,
      192,
      80,
      248,
      133,
      169,
      195,
      129,
      1,
      36,
      206,
      252,
      93,
      110,
      12
    ]);

    expect(await ed.verify(pk, msg, sig), true);
  });
}
